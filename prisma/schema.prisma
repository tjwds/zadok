// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// TODO for now, assume single-user

model Task {
  id          String     @id @default(cuid()) @map("_id")
  title       String
  // TODO do I care about creation / close dateTimes? probably notâ€¦
  done        Boolean    @default(false)
  TimeBlock   TimeBlock? @relation(fields: [timeBlockId], references: [id])
  timeBlockId String?
  created     DateTime   @default(now())
  type        String     @default("task")
  due         DateTime?
}

model Habit {
  id          String          @id @default(cuid()) @map("_id")
  title       String
  // TODO assuming, for now, that every habit is daily
  active      Boolean         @default(true)
  logEntries  HabitLogEntry[]
  TimeBlock   TimeBlock?      @relation(fields: [timeBlockId], references: [id])
  timeBlockId String?
}

model HabitLogEntry {
  id      String   @id @default(cuid()) @map("_id")
  time    DateTime @default(now())
  habit   Habit    @relation(fields: [habitId], references: [id])
  habitId String
}

model Goal {
  id    String   @id @default(cuid()) @map("_id")
  time  DateTime @default(now())
  title String
  done  Boolean  @default(false)
}

model TimeBlock {
  id     String  @id @default(cuid()) @map("_id")
  title  String
  tasks  Task[]
  habits Habit[]
}

model Points {
  id     String   @id @default(cuid()) @map("_id")
  reason String
  amount Int
  time   DateTime @default(now())
}

// Singleton
model Next {
  id    String @id @default(cuid()) @map("_id")
  queue String
}

model LogEntry {
  id    String   @id @default(cuid()) @map("_id")
  time  DateTime @default(now())
  type  String
  value String
}
